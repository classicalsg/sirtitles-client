"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.useWebSocket = void 0;

var _react = require("react");

const reducer = (state, action) => {
  switch (action.type) {
    case 'connecting':
      return { ...state,
        connecting: true
      };

    case 'connected':
      return { ...state,
        connecting: false,
        connected: true
      };

    case 'closed':
      return { ...state,
        connecting: false,
        connected: false
      };

    case 'message':
      return { ...state,
        message: state.message + action.payload.data,
        error: null,
        loading: false
      };

    case 'error':
      return { ...state,
        message: null,
        error: action.payload.error,
        loading: false
      };

    default:
      return state;
  }
};

const useWebSocket = (url = 'ws://localhost:4567') => {
  const [state, dispatch] = (0, _react.useReducer)(reducer, {
    message: [],
    error: null,
    loading: true
  });
  const websocket = new WebSocket(url);
  const connectClient = (0, _react.useCallback)(() => {
    dispatch({
      type: 'get'
    });

    websocket.onopen = () => {
      dispatch({
        type: 'connected'
      });
    };

    websocket.onmessage = evt => {
      dispatch({
        type: 'message',
        payload: {
          data: evt.data
        }
      });
    };

    websocket.onclose = () => {
      dispatch({
        type: 'closed'
      });
    };

    dispatch({
      type: 'connecting',
      payload: {}
    });
  }, [websocket.onclose, websocket.onmessage, websocket.onopen]);
  (0, _react.useEffect)(() => {
    connectClient();
  }, [connectClient]);
  return { ...state
  };
};

exports.useWebSocket = useWebSocket;
var _default = useWebSocket;
exports.default = _default;